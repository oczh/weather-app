{"version":3,"file":"305.c83ddf76747e0cfb.js","mappings":"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","names":["i0","i_r2","_r4","index","ctx_r3","deleteRow","currWeatherObj_r1","location","weather_icon","weather","temperature","windSpeed","cloudness","pressure","humidity","sunrise","sunset","rain","snow","routes","path","component","CurrentComponent","constructor","service","this","ngOnInit","readNavigatorCoords","subscription","coord$","subscribe","next","v","getValue","lat","console","log","getCurrentData","error","e","ngOnDestroy","curWeaDatasArr","unsubscribe","splice","static","t","i1","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","CurrentComponent_tr_31_Template","CurrentRoutingModule","oAB","cJS","RouterModule","forChild","CurrentModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/current/current.component.html","./src/app/current/current-routing.module.ts","./src/app/current/current.component.ts","./src/app/current/current.module.ts"],"sourcesContent":["<!-- \r\n<span>{{service.currentWeather | json}}</span>\r\n<span>{{service.currentWeatherData | json}}</span>\r\n-->\r\n<app-location-form></app-location-form>\r\n<div class=\"table-responsive\">\r\n  <table class=\"table-sm table-borderles my-5 equal_col_width\">\r\n    <thead class=\"opacity-50 bg-light\">\r\n      <tr>\r\n        <th scope=\"col\" class=\"align-top\">Location</th>\r\n        <th scope=\"col\" class=\"align-top\">Weather icon</th>\r\n        <th scope=\"col\" class=\"align-top\">Weather</th>\r\n        <th scope=\"col\" class=\"align-top\">Temperature [celsius]</th>\r\n        <th scope=\"col\" class=\"align-top\">Wind speed [meter/sec]</th>\r\n        <th scope=\"col\" class=\"align-top\">Cloudness [%]</th>\r\n        <th scope=\"col\" class=\"align-top\">Pressure [hPa]</th>\r\n        <th scope=\"col\" class=\"align-top\">Humidity [%]</th>\r\n        <th scope=\"col\" class=\"align-top\">Sunrise [hh:mm]</th>\r\n        <th scope=\"col\" class=\"align-top\">Sunset [hh:mm]</th>\r\n        <th scope=\"col\" class=\"align-top\">Rain [mm/1h]</th>\r\n        <th scope=\"col\" class=\"align-top\">Snow [mm/1h]</th>\r\n        <th scope=\"col\" class=\"align-top\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let currWeatherObj of service.curWeaDatasArr; index as i\">\r\n        <th scope=\"row\" class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.location}}</div>\r\n        </th>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">\r\n            <img style=\"width: 4rem;\"  alt=\"Weather icon\"\r\n              src=\"https://openweathermap.org/img/w/{{currWeatherObj.weather_icon}}.png\">\r\n          </div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.weather}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.temperature}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.windSpeed}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.cloudness}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.pressure}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.humidity}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.sunrise}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.sunset}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.rain}}</div>\r\n        </td>\r\n        <td class=\"transparent\">\r\n          <div class=\"box d-flex align-items-center justify-content-center\">{{currWeatherObj.snow}}</div>\r\n        </td>\r\n        <td class=\"transparent align-midle\">\r\n          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <button type=\"button\" class=\"btn btn-primary\">\r\n              <i class=\"bi bi-heart\"></i>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteRow(i)\">\r\n              <i class=\"bi bi-trash\"></i>\r\n            </button>  \r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CurrentComponent } from './current.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CurrentComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CurrentRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RequestRxService } from '../request-rx.service';\r\nimport { Coord } from '../types_interfaces';\r\nimport { SubscriptionLike } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-current',\r\n  templateUrl: './current.component.html',\r\n  styleUrls: ['./current.component.scss'],\r\n})\r\n\r\nexport class CurrentComponent implements OnInit, OnDestroy {\r\n  subscription: SubscriptionLike;\r\n\r\n  constructor(public service: RequestRxService) {\r\n  }  \r\n\r\n  ngOnInit(): void {\r\n    this.service.readNavigatorCoords()\r\n    this.subscription = this.service.coord$.subscribe({\r\n      next: (v: Coord) => {\r\n        if(this.service.coord$.getValue().lat !== 0){\r\n          console.log(this.service.coord$.getValue())\r\n          this.service.getCurrentData();\r\n        }\r\n      },\r\n      error: (e: any) => {}\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.curWeaDatasArr = [];\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  deleteRow(index : number){\r\n    this.service.curWeaDatasArr.splice(index, 1)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CurrentRoutingModule } from './current-routing.module';\r\nimport { CurrentComponent } from './current.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CurrentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CurrentRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class CurrentModule { }\r\n"],"x_google_ignoreList":[]}